@using Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.Blocks;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Web.Common.PublishedModels.ServiceListPage>
@{
    Layout = "mainLayout.cshtml";
    ViewBag.Title = Model?.Value("pageTitle") ?? null;
    
    var selection = Umbraco.Content(Guid.Parse("c8437bd4-841a-4433-8a9b-543f0dfc09a9"))!.ChildrenOfType("serviceItemTemplate")!.Where(x => x.IsVisible());

    var itemsPerPage = 6;

    if (!int.TryParse(Context.Request.Query["page"], out int currentPage))
        currentPage = 1;

    var totalItems = selection?.Count() ?? 0;
    var pagedItems = selection?.Skip((currentPage - 1) * itemsPerPage).Take(itemsPerPage);

    var blockGrid = Model!.Value<BlockGridModel>("projectContactSection");
}

@if (!string.IsNullOrEmpty(ViewBag.Title))
{
    @await Html.PartialAsync("partials/static/breadcrumb.cshtml")
}

<section id="our-services">
    <div class="container">
        @if (!string.IsNullOrEmpty(Model.Value("customHeadline").ToString()))  {  
        <div class="headline">
            <h2 class="title">@Model.Value("customHeadline")</h2>
        </div>
        }
        <div class=" services">
            @if (pagedItems != null)
            {
                @foreach (var item in pagedItems) 
                {
                    var image = item?.Value<IPublishedContent>("thumbnailImage")?.Url() ?? "";
                    var premable = item?.Value<string>("premable") ?? "";

                    <a href="@item!.Url()">
                        <div class="item">
                            <div class="header">
                                <h4>@item!.Name()</h4>
                            </div>
                            <div class="body">
                                <img src="@image" alt="@item!.Name" />
                            </div>
                            <div class="footer">
                                <p>@premable</p>
                            </div>
                        </div>
                    </a>
                }
            }
        </div>

        <section class="pagnation">
            <div class="container">
                @if (currentPage > 1)
                {
                    <a href="?page=@(currentPage - 1)" class="change">Prev</a>
                }
                else
                {
                    <span class="change inactive">Prev</span>
                }

                <ul class="pages">
                    @for (int i = 1; i <= Math.Ceiling((decimal)totalItems / itemsPerPage); i++)
                    {
                        <li class="@((i == currentPage) ? "number active" : "number")">
                            <a href="?page=@i">@i</a>
                        </li>
                    }
                </ul>

                @if (currentPage < Math.Ceiling((decimal)totalItems / itemsPerPage))
                {
                    <a class="change" href="?page=@(currentPage + 1)">Next</a>
                }
                else
                {
                    <span class="change inactive">Next</span>
                }
            </div>
        </section>
    </div>
</section>
 
 <section id="project-contact-section">  
    @if (blockGrid != null && blockGrid.Count() > 0)
    {
        @await Html.GetBlockGridHtmlAsync(blockGrid)
    }
    else
    {
        <p>No content found in the layout.</p>
    } 
</section>
