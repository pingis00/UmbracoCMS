@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper
@using Umbraco.Cms.Core
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.Routing
@using Umbraco.Extensions
@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider
@{ 
    var rootContents = UmbracoHelper.ContentAtRoot();
    var settings = rootContents?.FirstOrDefault(x => x.ContentType.Alias == "settingsPage") ?? null;
    var siteName = settings?.Value<string>("siteName") ?? "";
    var siteLogotype = settings?.Value<IPublishedContent>("siteLogotype")?.Url() ?? "";

    var selection = Model.Root().Children.Where(x => x.IsVisible(PublishedValueFallback)).ToArray(); 
    
}

<header>
    <div class="container">
        <div id="logo" class="logo">
            <a href="/"><img src="@siteLogotype" alt="@siteName" /></a>
        </div>
        <div id="menu" class="hide">
            <nav>
                @if (selection?.Length > 0)
                {                   
                    @foreach (var item in selection)
                    {
                        <a class=" link @(item.IsAncestorOrSelf(Model) ? "nav-link active" : "nav-link")" href="@item.Url(PublishedUrlProvider)" title="@item.Name">@item.Name</a>
                    }                    
                }
            </nav>
        </div>
            <div id="search" class="search hide">
                <i class="fa fa-search"></i>
            </div>
        <button onclick="toggleMenu()" class="btn-mobileMenu custom-btn-menu">
            <i class="fa-solid fa-bars"></i>
        </button>
    </div>
</header>