@using Umbraco.Cms.Web.Common.PublishedModels
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters
@using UmbracoCMS_SubmissionTask.Views.Helpers
@using Umbraco.Cms.Core.Models.Blocks
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>

@{
    var paragraphContent = Model?.Content.Value<string>("paragraphContent") ?? null;
    var fontStyle = Model?.Content.Value<string[]>("paragraphFontStyle")?.FirstOrDefault() ?? Model?.Content.Value<string>("paragraphFontStyle") ?? "Normal";
    var fontStyleClass = (fontStyle.Equals("Italic", StringComparison.OrdinalIgnoreCase)) ? "italic" : "normal";
    var textColor = Model?.Content?.Value<ColorPickerValueConverter.PickedColor>("textColor")?.Label.ToLower() ?? null;
    var textColorClass = (!string.IsNullOrEmpty(textColor) && textColor != "none") ? $"text-color-{textColor}" : "";
    var responsivePadding = ResponsivePaddingHelper.GetResponsivePaddingClasses(Model!);
    var fontWeightClass = FontWeightHelper.GetFontWeightClasses(Model!);
    var responsiveFontClasses = ResponsiveFontHelper.GetResponsiveFontClasses(Model!);
    var responsiveTextAlign = ResponsiveTextAlignHelper.GetResponsiveTextAlign(Model!);
}

@if (!string.IsNullOrEmpty(paragraphContent))
{
    <p class="paragraph @responsivePadding @fontStyleClass @textColorClass @fontWeightClass @responsiveFontClasses @responsiveTextAlign">
        @paragraphContent
    </p>
}