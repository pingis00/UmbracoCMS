@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters;
@using UmbracoCMS_SubmissionTask.Views.Helpers
@{
    var sectionTitle = Model?.Content.Value<string>("sectionTitle") ?? "";
    var sectionId = sectionTitle?.ToString().ToLower().Trim().Replace(" ", "-");

    var sectionBackgroundColorLabel = Model?.Content?.Value<ColorPickerValueConverter.PickedColor>("sectionBackgroundColor")?.Label.ToLower() ?? null;
    var backgroundColorClass = (!string.IsNullOrEmpty(sectionBackgroundColorLabel) && sectionBackgroundColorLabel != "none") ? $"custom-bg-{sectionBackgroundColorLabel}" : "";

    var sectionBackgroundImage = Model?.Content.Value<IPublishedContent>("sectionBackgroundImage")?.Url() ?? null;
    var showHideImageClasses = DisplayImageHelper.GetDisplayClasses(Model!);

    var responsivePadding = ResponsivePaddingHelper.GetResponsivePaddingClasses(Model!);
    var responsiveMargin = ResponsiveMarginHelper.GetResponsiveMarginClasses(Model!);
    var responsiveTextAlign = ResponsiveTextAlignHelper.GetResponsiveTextAlign(Model!);
    var widthClasses = WidthHelper.GetWidthClasses(Model!);
}


<section id="@sectionId" class="@backgroundColorClass section-with-bg-image @responsivePadding @responsiveMargin">
    @if (!string.IsNullOrEmpty(sectionBackgroundImage))
    {
        <img src="@sectionBackgroundImage" alt="Background" class="section-bg-image @showHideImageClasses" />
    }
    <div class="container section-content @responsiveTextAlign @widthClasses">
        @await Html.GetBlockGridItemAreasHtmlAsync(Model!)
    </div>
</section>
