@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<Umbraco.Cms.Core.Models.Blocks.BlockGridItem>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.PropertyEditors.ValueConverters;
@{
    var sectionTitle = Model?.Content.Value<string>("sectionTitle") ?? "";
    var sectionId = sectionTitle?.ToString().ToLower().Trim().Replace(" ", "-");

    var paddingTop = Model.Content.Value<int>("paddingTop");
    var paddingBottom = Model.Content.Value<int>("paddingBottom");
    var paddingLeft = Model.Content.Value<int>("paddingLeft");
    var paddingRight = Model.Content.Value<int>("paddingRight");
        
    var paddingClass = $"padding-{paddingTop}-{paddingRight}-{paddingBottom}-{paddingLeft}";

    var sectionBackgroundColorLabel = Model?.Content?.Value<ColorPickerValueConverter.PickedColor>("sectionBackgroundColor")?.Label.ToLower() ?? null;
    var backgroundColorClass = (!string.IsNullOrEmpty(sectionBackgroundColorLabel) && sectionBackgroundColorLabel != "none") ? $"custom-bg-{sectionBackgroundColorLabel}" : "";

    var sectionBackgroundImage = Model?.Content.Value<IPublishedContent>("sectionBackgroundImage")?.Url() ?? null;
}

<section id="@sectionId" 
        class="@(string.IsNullOrEmpty(backgroundColorClass) ? "" : backgroundColorClass) @paddingClass" 
        style="@(string.IsNullOrEmpty(sectionBackgroundImage) ? "" : $"background-image:url('{sectionBackgroundImage}');")">
    @await Html.GetBlockGridItemAreasHtmlAsync(Model!)
</section>